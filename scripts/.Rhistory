library(tidyverse)
library(forcats)
knitr::opts_chunk$set(echo = F, message = F, warning = F)
rm(list=ls())
path='~/Documents/UCSD/Research/Process Shift/'
dat = read.csv(paste0(path,'data/proc_shif_data.csv')) %>%
transmute(subject = su,
trial = bl,
first.correct.trial.item = first,
trials.since.1st.correct = bl_r,
reversions = ifelse(itype == 1, F,T),
item,
strategy = ifelse(strat==1, 'algorithm','retrieval'),
is.alg = ifelse(strategy == 'algorithm', 1, 0),
is.ret = ifelse(strategy == 'retrieval', 1 , 0),
RT)
library(rstan)
stan.data = list(y = log(dat$RT),
strategy = as.integer(dat$strategy == 'retrieval')+1,
isAlg = dat$is.alg,
isRet = dat$is.ret,
item = as.numeric(as.factor(dat$item)),
subject = as.numeric(as.factor(dat$subject)),
trial = dat$trial,
N = nrow(dat),
nc = length(unique(dat$strategy)),
ni = length(unique(dat$item)),
ns = length(unique(dat$subject)),
nt = length(unique(dat$trial)),
# Find a reasonable location for beta:
# 85th %ile of subject*item first correct retrieval trial (ok?)
betaBase = dat %>%
group_by(subject, item) %>%
summarize(first.correct = mean(first.correct.trial.item)) %>%
ungroup() %>%
summarize(beta.loc = quantile(first.correct,.85)) %>%
.$beta.loc
)
# use overall RT mean, sigma to set priors for algorithm trials
meanRT = mean(log(dat$RT)) # = 7.6
sdRT = sd(log(dat$RT)) # = .9
# set beta priors based on mean, sd for retrieval trials
meanRT.beta = mean(log(dat$RT[dat$strategy == 'retrieval'])) # = 7.3
sdRT.beta = sd(log(dat$RT[dat$strategy == 'retrieval'])) # = 7
fit.delExp <- stan(
file = paste0(path, '/scripts/delayedExp.stan'),
#model_code = mod,  # Stan program
data = stan.data,    # named list of data
chains = 1,             # number of Markov chains
warmup = 100,          # number of warmup iterations per chain
iter = 300,            # total number of iterations per chain
cores = 4,              # number of cores (using 2 just for the vignette)
refresh = 250          # show progress every 'refresh' iterations
)
samples.delExp <- extract(fit) %>% as.data.frame()
df = data.frame(Low = 1:10, High= 11:20, Close = 21:30, Volume = 31:40)
df <- df %>%
mutate(MFM = ((Close - Low)- (High - Close))/(High - Low),
MFV = MFM *round(Volume/1000,digits=0),
ADL = MFV)#, # for now just copy over all of MFV
View(df)
df <- df %>%
mutate(MFM = ((Close - Low)- (High - Close))/(High - Low),
MFV = MFM *round(Volume/1000,digits=0),
ADL = MFV)#, # for now just copy over all of MFV
View(df)
df %>%
mutate(MFM = ((Close - Low)- (High - Close))/(High - Low),
MFV = MFM *round(Volume/1000,digits=0),
ADL = MFV)
library(tidyverse)
df = data.frame(Low = 1:10, High= 11:20, Close = 21:30, Volume = 31:40)
df <- df %>%
mutate(MFM = ((Close - Low)- (High - Close))/(High - Low),
MFV = MFM *round(Volume/1000,digits=0),
ADL = MFV)#, # for now just copy over all of MFV
View(df)
df = data.frame(Low = rnorm(10), High= rnorm(10), Close = rnorm(10), Volume = rnorm(10))
df <- df %>%
mutate(MFM = ((Close - Low) - (High - Close))/(High - Low),
MFV = MFM *round(Volume/1000,digits=0),
ADL = MFV)#, # for now just copy over all of MFV
df = data.frame(Low = rnorm(10), High= rnorm(10), Close = rnorm(10), Volume = rnorm(10))
df <- df %>%
mutate(MFM = ((Close - Low) - (High - Close))/(High - Low),
MFV = MFM *round(Volume/1000,digits=0),
ADL = MFV, # for now just copy over all of MFV
ADL = ADL + lag(ADL, default =0))
d = data.frame(Low = rnorm(10), High= rnorm(10), Close = rnorm(10), Volume = rnorm(10))
df <- d %>%
mutate(MFM = ((Close - Low) - (High - Close))/(High - Low),
MFV = MFM *Volume/1000,digits=0,
ADL = MFV, # for now just copy over all of MFV
ADL = ADL + lag(ADL, default =0))
df <- d %>%
mutate(MFM = ((Close - Low) - (High - Close))/(High - Low),
MFV = MFM *Volume/1000,
ADL = MFV, # for now just copy over all of MFV
ADL = ADL + lag(ADL, default =0))
